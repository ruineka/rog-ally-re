USB Debug Stuff

usbcore.quirks=
    [USB] A list of quirk entries to augment the built-in
    usb core quirk list. List entries are separated by
    commas. Each entry has the form VendorID:ProductID:Flags.
    The IDs are 4-digit hex numbers and Flags is a set of letters.
    Each letter will change the built-in quirk; setting it if it is
    clear and clearing it if it is set. The letters have the following meanings:
            a = USB_QUIRK_STRING_FETCH_255 (string
                descriptors must not be fetched using
                a 255-byte read);
            b = USB_QUIRK_RESET_RESUME (device can't resume
                correctly so reset it instead);
            c = USB_QUIRK_NO_SET_INTF (device can't handle
                Set-Interface requests);
            d = USB_QUIRK_CONFIG_INTF_STRINGS (device can't
                handle its Configuration or Interface
                strings);
            e = USB_QUIRK_RESET (device can't be reset
                (e.g morph devices), don't use reset);
            f = USB_QUIRK_HONOR_BNUMINTERFACES (device has
                more interface descriptions than the
                bNumInterfaces count, and can't handle
                talking to these interfaces);
            g = USB_QUIRK_DELAY_INIT (device needs a pause
                during initialization, after we read
                the device descriptor);
            h = USB_QUIRK_LINEAR_UFRAME_INTR_BINTERVAL (For
                high speed and super speed interrupt
                endpoints, the USB 2.0 and USB 3.0 spec
                require the interval in microframes (1
                microframe = 125 microseconds) to be
                calculated as interval = 2 ^
                (bInterval-1).
                Devices with this quirk report their
                bInterval as the result of this
                calculation instead of the exponent
                variable used in the calculation);
            i = USB_QUIRK_DEVICE_QUALIFIER (device can't
                handle device_qualifier descriptor
                requests);
            j = USB_QUIRK_IGNORE_REMOTE_WAKEUP (device
                generates spurious wakeup, ignore
                remote wakeup capability);
            k = USB_QUIRK_NO_LPM (device can't handle Link
                Power Management);
            l = USB_QUIRK_LINEAR_FRAME_INTR_BINTERVAL
                (Device reports its bInterval as linear
                frames instead of the USB 2.0
                calculation);
            m = USB_QUIRK_DISCONNECT_SUSPEND (Device needs
                to be disconnected before suspend to
                prevent spurious wakeup);
            n = USB_QUIRK_DELAY_CTRL_MSG (Device needs a
                pause after every control message);
            o = USB_QUIRK_HUB_SLOW_RESET (Hub needs extra
                delay after resetting its port);
    Example: quirks=0781:5580:bk,0a5c:5834:gij


# Test platform pm_test (This uses global ACPI methods) and devices pm_test (This does userspace and device suspend only without ACPI)
echo platform > /sys/power/pm_test
echo freeze > /sys/power/state
echo none > /sys/power/pm_test

# Very useful dynamic debugging
echo 'module xhci_hcd +pflm' > /sys/kernel/debug/dynamic_debug/control
echo 'module usbcore +pflm' > /sys/kernel/debug/dynamic_debug/control
echo 'module amd_pmc +pflm' > /sys/kernel/debug/dynamic_debug/control

# Bind/Unbind USB
echo "1-3" > /sys/bus/usb/drivers/usb/bind
echo "1-3" > /sys/bus/usb/drivers/usb/unbind

# Send ACPI Call
echo '\_SB_.PCI0.SBRG.EC0._Q0A' > /proc/acpi/call (This will put the device to sleep by sending the SLPB command)
echo '\_SB_.PCI0.SBRG.EC0._QDE' > /proc/acpi/call (This will send the power button event to put the system to sleep)

# Send WMI keyboard events by ACPI Call
echo '\_SB_.ATKD.IANE' 0x31 > /proc/acpi/call (Send volume down button)

# Notes

[  452.924029] usbcore:hcd_pci_suspend_noirq:552: xhci_hcd 0000:0c:00.4: --> PCI D3cold
[  452.924245] usbcore:hcd_pci_suspend_noirq:552: xhci_hcd 0000:0c:00.3: --> PCI D3cold
[  452.924322] usbcore:hcd_pci_suspend_noirq:552: xhci_hcd 0000:0a:00.4: --> PCI D3cold
[  452.939168] usbcore:hcd_pci_suspend_noirq:552: xhci_hcd 0000:0a:00.3: --> PCI D3cold
[    0.294054] pci 0000:00:01.1: PME# supported from D0 D3hot D3cold
[    0.294948] pci 0000:00:01.4: PME# supported from D0 D3hot D3cold
[    0.295533] pci 0000:00:02.2: PME# supported from D0 D3hot D3cold
[    0.295980] pci 0000:00:02.3: PME# supported from D0 D3hot D3cold
[    0.296434] pci 0000:00:02.4: PME# supported from D0 D3hot D3cold
[    0.297112] pci 0000:00:08.1: PME# supported from D0 D3hot D3cold
[    0.297317] pci 0000:00:08.2: PME# supported from D0 D3hot D3cold
[    0.297489] pci 0000:00:08.3: PME# supported from D0 D3hot D3cold
[    0.298739] pci 0000:07:00.0: PME# supported from D0 D3hot D3cold
[    0.299681] pci 0000:08:00.0: PME# supported from D1 D2 D3hot D3cold
[    0.301086] pci 0000:0a:00.0: PME# supported from D1 D2 D3hot D3cold
[    0.301309] pci 0000:0a:00.1: PME# supported from D1 D2 D3hot D3cold
[    0.301670] pci 0000:0a:00.3: PME# supported from D0 D3hot D3cold
[    0.301855] pci 0000:0a:00.4: PME# supported from D0 D3hot D3cold
[    0.302029] pci 0000:0a:00.5: PME# supported from D0 D3hot D3cold
[    0.302218] pci 0000:0a:00.6: PME# supported from D0 D3hot D3cold
[    0.302462] pci 0000:0b:00.0: PME# supported from D3hot D3cold
[    0.302930] pci 0000:0c:00.3: PME# supported from D0 D3hot D3cold
[    0.303115] pci 0000:0c:00.4: PME# supported from D0 D3hot D3cold

ASUS

0a:00.3 USB controller [0c03]: Advanced Micro Devices, Inc. [AMD] Device [1022:15b9] (prog-if 30 [XHCI])
	Subsystem: ASUSTeK Computer Inc. Device [1043:201f]
	Flags: bus master, fast devsel, latency 0, IRQ 43, IOMMU group 21
	Memory at fc500000 (64-bit, non-prefetchable) [size=1M]
	Capabilities: [48] Vendor Specific Information: Len=08 <?>
	Capabilities: [50] Power Management version 3
	Capabilities: [64] Express Endpoint, MSI 00
	Capabilities: [a0] MSI: Enable+ Count=1/1 Maskable- 64bit+
	Capabilities: [c0] MSI-X: Enable- Count=1 Masked-
	Capabilities: [100] Vendor Specific Information: ID=0001 Rev=1 Len=010 <?>
	Capabilities: [2a0] Access Control Services
	Kernel driver in use: xhci_hcd
	Kernel modules: xhci_pci

0a:00.4 USB controller [0c03]: Advanced Micro Devices, Inc. [AMD] Device [1022:15ba] (prog-if 30 [XHCI])
	Subsystem: ASUSTeK Computer Inc. Device [1043:201f]
	Flags: fast devsel, IRQ 44, IOMMU group 22
	Memory at fc400000 (64-bit, non-prefetchable) [size=1M]
	Capabilities: [48] Vendor Specific Information: Len=08 <?>
	Capabilities: [50] Power Management version 3
	Capabilities: [64] Express Endpoint, MSI 00
	Capabilities: [a0] MSI: Enable- Count=1/1 Maskable- 64bit+
	Capabilities: [c0] MSI-X: Enable- Count=1 Masked-
	Capabilities: [100] Vendor Specific Information: ID=0001 Rev=1 Len=010 <?>
	Capabilities: [2a0] Access Control Services
	Kernel modules: xhci_pci


# unbind this to remove these devices
echo "0000:0a:00.3" > /sys/bus/pci/drivers/xhci_hcd/unbind 

Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub
Bus 001 Device 003: ID 0b05:1abe ASUSTek Computer, Inc. N-KEY Device
Bus 001 Device 002: ID 045e:028e Microsoft Corp. Xbox360 Controller
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub

# Set PCI states
[00, 03]
setpci -s 0a:00.3 CAP_PM+4.b=03
echo 1 > /sys/bus/pci/rescan

# Check Power States
grep -H . /sys/bus/pci/devices/0000\:0a\:00.3/firmware_node/power_state
grep -H . /sys/bus/pci/devices/0000\:0a\:00.3/firmware_node/real_power_state

# Find path

cat /sys/bus/usb/devices/1-3/firmware_node/path 
\_SB_.PCI0.GP17.XHC0.RHUB.PRT3

cat /sys/bus/usb/devices/1-2/firmware_node/path 
\_SB_.PCI0.GP17.XHC0.RHUB.PRT2

#
cat /sys/devices/pci0000:00/firmware_node/device:27/device:33/path
/sys/devices/pci0000:00/firmware_node/device:27/device:33/device:34
USB 1-2 (/sys/devices/pci0000:00/firmware_node/device:27/device:33/device:34/device:36)
USB 103 (/sys/devices/pci0000:00/firmware_node/device:27/device:33/device:34/device:37)












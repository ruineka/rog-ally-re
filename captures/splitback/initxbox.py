#!/usr/bin/env python3
# Generated by usbrply
# cmd: /usr/bin/usbrply --device-hi --wrapper -p xboxinit.pcapng

import binascii
import time
import usb1


def validate_read(expected, actual, msg):
    if expected != actual:
        print('Failed %s' % msg)
        print('  Expected; %s' % binascii.hexlify(expected,))
        print('  Actual:   %s' % binascii.hexlify(actual,))
        #raise Exception("failed validate: %s" % msg)


def replay(dev):
    def bulkRead(endpoint, length, timeout=None):
        return dev.bulkRead(endpoint, length, timeout=(1000 if timeout is None else timeout))

    def bulkWrite(endpoint, data, timeout=None):
        dev.bulkWrite(endpoint, data, timeout=(1000 if timeout is None else timeout))
    
    def controlRead(bRequestType, bRequest, wValue, wIndex, wLength,
                    timeout=None):
        return dev.controlRead(bRequestType, bRequest, wValue, wIndex, wLength,
                    timeout=(1000 if timeout is None else timeout))

    def controlWrite(bRequestType, bRequest, wValue, wIndex, data,
                     timeout=None):
        dev.controlWrite(bRequestType, bRequest, wValue, wIndex, data,
                     timeout=(1000 if timeout is None else timeout))

    def interruptRead(endpoint, size, timeout=None):
        return dev.interruptRead(endpoint, size,
                    timeout=(1000 if timeout is None else timeout))

    def interruptWrite(endpoint, data, timeout=None):
        dev.interruptWrite(endpoint, data, timeout=(1000 if timeout is None else timeout))

    # Generated by usbrply
    # Source: Windows pcap (USBPcap)
    # cmd: /usr/bin/usbrply --device-hi --wrapper -p xboxinit.pcapng
    # PCapGen device hi: selected device 1
    # Generated from packet 1/2
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # Generated from packet 3/4
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x0A\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # NOTE:: req max 64 but got 32
    # Generated from packet 7/8
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x02\x01\x2C\x01\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x05\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x01\x0A\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x03\x8C\x88\x76\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # Generated from packet 9/10
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x0A\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # NOTE:: req max 64 but got 32
    # Generated from packet 13/14
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x02\x02\x2C\x01\x0B\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x04\x00\x00\x00\x00\x02\x82\x23\x00\x00\x00\x01\x0C\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x02\x82\x0D\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # Generated from packet 15/16
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x0A\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # NOTE:: req max 64 but got 32
    # Generated from packet 19/20
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x02\x03\x2C\x01\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x08\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # Generated from packet 21/22
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x0A\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # NOTE:: req max 64 but got 32
    # Generated from packet 25/26
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x02\x04\x2C\x01\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x06\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # Generated from packet 27/28
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x0A\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # NOTE:: req max 64 but got 32
    # Generated from packet 31/32
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x02\x05\x2C\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x05\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x02\x82\x31\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # Generated from packet 33/34
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x0A\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # NOTE:: req max 64 but got 32
    # Generated from packet 37/38
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x02\x06\x2C\x01\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x04\x00\x00\x00\x00\x02\x82\x4D\x00\x00\x00\x01\x04\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x05\x00\x00\x1E\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # Generated from packet 39/40
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x0A\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # NOTE:: req max 64 but got 32
    # Generated from packet 43/44
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x02\x07\x2C\x01\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x12\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # Generated from packet 45/46
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x0A\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # NOTE:: req max 64 but got 32
    # Generated from packet 49/50
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x02\x08\x2C\x04\x00\x00\x00\x00\x02\x8C\x09\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00"
            b"\x02\x8C\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # Generated from packet 51/52
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x0A\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # NOTE:: req max 64 but got 32
    # Generated from packet 55/56
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x02\x09\x2C\x01\x0D\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x0E\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # Generated from packet 57/58
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x0F\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # Generated from packet 59/60
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x06\x02\x64\x64\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # Generated from packet 61/62
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x04\x04\x00\x64\x00\x64\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # Generated from packet 63/64
    controlWrite(0x21, 0x09, 0x035A, 0x0002, b"\x5A\xD1\x05\x04\x00\x64\x00\x64\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    # PcapGen: generated 65 packets
    # PcapGen device filter: dropped 0 / 65 packets
    # VidpidFilter: dropped 0 / 47 entries, want None
    # SetupFilter: dropped 9 / 48 entries

def open_dev(vid_want, pid_want, usbcontext=None):
    if usbcontext is None:
        usbcontext = usb1.USBContext()
    
    print("Scanning for devices...")
    for udev in usbcontext.getDeviceList(skip_on_error=True):
        vid = udev.getVendorID()
        pid = udev.getProductID()
        if (vid, pid) == (vid_want, pid_want):
            print("Found device")
            print("Bus %03i Device %03i: ID %04x:%04x" % (
                udev.getBusNumber(),
                udev.getDeviceAddress(),
                vid,
                pid))
            return udev.open()
    raise Exception("Failed to find a device")

def main():
    import argparse 

    vid_want = 0x0b05 	
    pid_want = 0x1abe
    parser = argparse.ArgumentParser(description="Replay captured USB packets")
    args = parser.parse_args()

    usbcontext = usb1.USBContext()
    dev = open_dev(vid_want, pid_want, usbcontext)
    if dev.kernelDriverActive(2) == 1:
        dev.detachKernelDriver(2)
    dev.claimInterface(2)
    dev.resetDevice()
    replay(dev)
    dev.releaseInterface(2)
    dev.attachKernelDriver(2)



if __name__ == "__main__":
    main()
